# Generated by Django 3.2.5 on 2021-12-19 20:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('Specialization', models.CharField(max_length=200)),
                ('Experience', models.IntegerField()),
                ('Image', models.ImageField(blank=True, null=True, upload_to='doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fees', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDetailsDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10, null=True)),
                ('ServiceID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.service')),
            ],
            options={
                'unique_together': {('ServiceID', 'Day')},
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=190, unique=True)),
                ('Address', models.CharField(max_length=300)),
                ('Status', models.CharField(choices=[('E', 'ENABLE'), ('D', 'DISABLE')], default='E', max_length=2)),
                ('Interior_image', models.ImageField(blank=True, null=True, upload_to='shops')),
                ('OffDay', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Sunday', max_length=10)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='shops')),
                ('Opening_time', models.TimeField(blank=True, null=True)),
                ('Closing_time', models.TimeField(blank=True, null=True)),
                ('Shop_url', models.URLField(default='www.watduwant.com/show_details')),
                ('Shop_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='Clinic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.shop'),
        ),
        migrations.AddField(
            model_name='service',
            name='Doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.doctor'),
        ),
        migrations.CreateModel(
            name='ServiceDetailsDayTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.TimeField()),
                ('Visit_capacity', models.IntegerField()),
                ('ServiceDetailsDayID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.servicedetailsday')),
            ],
            options={
                'unique_together': {('ServiceDetailsDayID', 'Time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('Clinic', 'Doctor')},
        ),
    ]
